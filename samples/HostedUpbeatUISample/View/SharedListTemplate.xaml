<!-- This file is part of the UpbeatUI project, which is released under MIT License.
     See LICENSE.md or visit:
     https://github.com/pulselyre/upbeatui/blob/main/LICENSE.md
     -->
<ResourceDictionary
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:uv="clr-namespace:UpbeatUI.View;assembly=UpbeatUI"
    xmlns:uvc="clr-namespace:UpbeatUI.View.Converters;assembly=UpbeatUI"
    xmlns:svm="clr-namespace:HostedUpbeatUISample.ViewModel">
    <!-- Note that "DataType" for this DataTemplate refers to a specific ViewModel class. When an instance of that
         ViewModel class is added to the stack, this DataTemplate will be used to display content. The VieWModel
         instance will be the "DataContext". -->
    <DataTemplate DataType="{x:Type svm:SharedListViewModel}">
        <!-- The PercentPositionWithinUpbeatStackConverter is used in CommandParameter bindings for Commands that need
             to know the position of the button that executed them. This can be used to open a popup above the button
             that the user clicked/touched. -->
        <DataTemplate.Resources>
            <uvc:PercentPositionWithinUpbeatStackConverter x:Key="PositionConverter" />
        </DataTemplate.Resources>
        <!-- The "HeightPercent" and "WidthPercent" properties, which must be set on the root element within the
             DataTemplate, control how much available space the content should take. It accepts percentages and decimal
             values (so 1.0 = 100%). It can also accept min/max ranges. This view will take exactly 60% of available
             horizontal space, always, and whatever its content needs vertically up to 95%. -->
        <Border
            uv:PercentPlace.HeightPercent="65%"
            uv:PercentPlace.WidthPercent="75%"
            BorderBrush="Black"
            BorderThickness="5"
            Background="White">
            <Grid>
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="*" />
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="Auto" />
                </Grid.RowDefinitions>
                <Viewbox
                    Grid.Row="0"
                    Stretch="Uniform"
                    StretchDirection="DownOnly">
                    <StackPanel Orientation="Vertical">
                        <TextBlock
                            TextWrapping="Wrap"
                            TextAlignment="Center"
                            HorizontalAlignment="Center"
                            MaxWidth="250"
                            Margin="5"> This View is configured to take exactly 75% of available width and height,
                            regardless of the size of its content and what is available. </TextBlock>
                        <TextBlock
                            TextAlignment="Center"
                            Margin="5"
                            Text="{Binding SecondsElapsed}" />
                        <TextBlock
                            TextAlignment="Center"
                            Margin="5"
                            Text="{Binding StringsCount}" />
                    </StackPanel>
                </Viewbox>
                <ListBox
                    Grid.Row="1"
                    ItemsSource="{Binding SharedListDataViewModel.Strings}"
                    HorizontalContentAlignment="Center"
                    Margin="5" />
                <Button
                    Grid.Row="2"
                    DockPanel.Dock="Bottom"
                    Command="{Binding SharedListDataViewModel.AddStringCommand}"
                    CommandParameter="{Binding RelativeSource={RelativeSource Self}, Converter={StaticResource PositionConverter}}"
                    Margin="5">AddString</Button>
                <Button
                    Grid.Row="3"
                    DockPanel.Dock="Bottom"
                    Command="{Binding CloseCommand}"
                    Margin="5">Close</Button>
            </Grid>
        </Border>
    </DataTemplate>
</ResourceDictionary>
