<!-- This file is part of the UpbeatUI project, which is released under MIT License.
     See LICENSE.md or visit:
     https://github.com/michaelpduda/upbeatui/blob/master/LICENSE.md
     -->
<!-- The "HeightPercent" and "WidthPercent" properties set how much available space the
     UpbeatControl should take. It accepts percentages and decimal values (so 1.0 = 100%).
     It can also accept min/max ranges. In this case, the View will be no smaller than 60%
     of available space, and no larger than 80%. Between those two values, it will take as
     much space as the content requires. -->
<uv:UpbeatControl x:Class="HostedUpbeatUISample.View.SharedListControl"
                  xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                  xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
                  xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                  xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
                  xmlns:uv="clr-namespace:UpbeatUI.View;assembly=UpbeatUI"
                  xmlns:uvc="clr-namespace:UpbeatUI.View.Converters;assembly=UpbeatUI"
                  HeightPercent="65%"
                  WidthPercent="75%"
                  mc:Ignorable="d"
                  d:DesignHeight="265"
                  d:DesignWidth="265">
    <!-- The PercentPositionWithinUpbeatStackConverter is used in CommandParameter
         bindings for Commands that need to know the position of the button that executed
         them. This can be used to open a popup above the button that the user
         clicked/touched. -->
    <uv:UpbeatControl.Resources>
        <uvc:PercentPositionWithinUpbeatStackConverter x:Key="PositionConverter" />
    </uv:UpbeatControl.Resources>
    <Border BorderBrush="Black"
            BorderThickness="5"
            Background="White">
        <Grid>
            <Grid.RowDefinitions>
                <RowDefinition Height="*"
                               MaxHeight="{Binding ActualHeight, ElementName=_scaledPanel}" />
                <RowDefinition Height="*"
                               MinHeight="60"/>
                <RowDefinition Height="auto" />
            </Grid.RowDefinitions>
            <Viewbox Grid.Row="0"
                     Stretch="Uniform"
                     StretchDirection="DownOnly">
                <StackPanel x:Name="_scaledPanel"
                            Orientation="Vertical">
                    <TextBlock TextWrapping="Wrap"
                               TextAlignment="Center"
                               HorizontalAlignment="Center"
                               MaxWidth="250"
                               Margin="5">
                            This View is configured to take exactly 75% of available width and height, regardless of the size of its content and what is available.
                    </TextBlock>
                    <TextBlock TextAlignment="Center"
                               Margin="5"
                               Text="{Binding SecondsElapsed}" />
                    <TextBlock TextAlignment="Center"
                               Margin="5"
                               Text="{Binding StringsCount}" />
                </StackPanel>
            </Viewbox>
            <!-- This DockPanel's DataContext is bound to the child SharedListDataViewModel
                 that is a property on SharedListViewModel. -->
            <DockPanel Grid.Row="1"
                       DataContext="{Binding SharedListDataViewModel}">
                <Button DockPanel.Dock="Bottom"
                        Command="{Binding AddStringCommand}"
                        CommandParameter="{Binding RelativeSource={RelativeSource Self}, Converter={StaticResource PositionConverter}}"
                        Margin="5">AddString</Button>
                <ListBox ItemsSource="{Binding Strings}"
                         HorizontalContentAlignment="Center"
                         Margin="5" />
            </DockPanel>
            <Button Grid.Row="2"
                    Command="{Binding CloseCommand}"
                    Margin="5">Close</Button>
        </Grid>
    </Border>
</uv:UpbeatControl>
