# This file is part of the UpbeatUI project, which is released under MIT License.
# See LICENSE.md or visit:
# https://github.com/pulselyre/upbeatui/blob/main/LICENSE.md

# EditorConfig is awesome: https://EditorConfig.org

# top-most EditorConfig file
root = true

# Don't use tabs for indentation.
[*]
charset = utf-8
end_of_line = lf
insert_final_newline = true
indent_style = space
indent_size = 2
trim_trailing_whitespace = true
max_line_length = 120

# XML code style settings:
[*.{csproj,xaml}]
indent_size = 4

# CSharp code style settings:
[*.cs]
indent_size = 4

dotnet_code_quality.api_surface = all
dotnet_diagnostic.CA1000.severity = warning # Do not declare static members on generic types
dotnet_diagnostic.CA1001.severity = warning # Types that own disposable fields should be disposable
dotnet_diagnostic.CA1002.severity = warning # Do not expose generic lists
dotnet_diagnostic.CA1003.severity = warning # Use generic event handler instances
dotnet_diagnostic.CA1005.severity = warning # Avoid excessive parameters on generic types
dotnet_diagnostic.CA1008.severity = warning # Enums should have zero value
dotnet_diagnostic.CA1010.severity = warning # Collections should implement generic interface
dotnet_diagnostic.CA1012.severity = warning # Abstract types should not have constructors
dotnet_diagnostic.CA1014.severity = warning # Mark assemblies with CLSCompliantAttribute
dotnet_diagnostic.CA1016.severity = warning # Mark assemblies with AssemblyVersionAttribute
dotnet_diagnostic.CA1017.severity = warning # Mark assemblies with ComVisibleAttribute
dotnet_diagnostic.CA1018.severity = warning # Mark attributes with AttributeUsageAttribute
dotnet_diagnostic.CA1019.severity = warning # Define accessors for attribute arguments
dotnet_diagnostic.CA1021.severity = warning # Avoid out parameters
dotnet_diagnostic.CA1024.severity = warning # Use properties where appropriate
dotnet_diagnostic.CA1027.severity = warning # Mark enums with FlagsAttribute
dotnet_diagnostic.CA1028.severity = warning # Enum storage should be Int32
dotnet_diagnostic.CA1030.severity = warning # Use events where appropriate
dotnet_diagnostic.CA1031.severity = silent # Do not catch general exception types
dotnet_diagnostic.CA1032.severity = warning # Implement standard exception constructors
dotnet_diagnostic.CA1033.severity = warning # Interface methods should be callable by child types
dotnet_diagnostic.CA1034.severity = silent # Nested types should not be visible
dotnet_diagnostic.CA1036.severity = warning # Override methods on comparable types
dotnet_diagnostic.CA1040.severity = warning # Avoid empty interfaces
dotnet_diagnostic.CA1041.severity = warning # Provide ObsoleteAttribute message
dotnet_diagnostic.CA1043.severity = warning # Use integral or string argument for indexers
dotnet_diagnostic.CA1044.severity = warning # Properties should not be write only
dotnet_diagnostic.CA1045.severity = warning # Do not pass types by reference
dotnet_diagnostic.CA1046.severity = warning # Do not overload operator equals on reference types
dotnet_diagnostic.CA1047.severity = warning # Do not declare protected members in sealed types
dotnet_diagnostic.CA1050.severity = warning # Declare types in namespaces
dotnet_diagnostic.CA1051.severity = warning # Do not declare visible instance fields
dotnet_diagnostic.CA1052.severity = warning # Static holder types should be sealed
dotnet_diagnostic.CA1053.severity = warning # Static holder types should not have constructors
dotnet_diagnostic.CA1054.severity = warning # URI parameters should not be strings
dotnet_diagnostic.CA1055.severity = warning # URI return values should not be strings
dotnet_diagnostic.CA1056.severity = warning # URI properties should not be strings
dotnet_diagnostic.CA1058.severity = warning # Types should not extend certain base types
dotnet_diagnostic.CA1060.severity = warning # Move P/Invokes to NativeMethods class
dotnet_diagnostic.CA1061.severity = warning # Do not hide base class methods
dotnet_diagnostic.CA1062.severity = warning # Validate arguments of public methods
dotnet_code_quality.CA1062.api_surface = public

dotnet_diagnostic.CA1063.severity = warning # Implement IDisposable correctly
dotnet_diagnostic.CA1064.severity = warning # Exceptions should be public
dotnet_diagnostic.CA1065.severity = warning # Do not raise exceptions in unexpected locations
dotnet_diagnostic.CA1066.severity = warning # Implement IEquatable when overriding Equals
dotnet_diagnostic.CA1067.severity = warning # Override Equals when implementing IEquatable
dotnet_diagnostic.CA1068.severity = warning # CancellationToken parameters must come last
dotnet_diagnostic.CA1069.severity = warning # Enums should not have duplicate values
dotnet_diagnostic.CA1070.severity = warning # Do not declare event fields as virtual
dotnet_diagnostic.CA1200.severity = warning # Avoid using cref tags with a prefix
dotnet_diagnostic.CA1303.severity = warning # Do not pass literals as localized parameters
dotnet_diagnostic.CA1304.severity = warning # Specify CultureInfo
dotnet_diagnostic.CA1305.severity = warning # Specify IFormatProvider
dotnet_diagnostic.CA1307.severity = warning # Specify StringComparison for clarity
dotnet_diagnostic.CA1308.severity = warning # Normalize strings to uppercase
dotnet_diagnostic.CA1309.severity = warning # Use ordinal StringComparison
dotnet_diagnostic.CA1310.severity = warning # Specify StringComparison for correctness
dotnet_diagnostic.CA1311.severity = warning # Specify a culture or use an invariant version
dotnet_diagnostic.CA1401.severity = warning # P/Invokes should not be visible
dotnet_diagnostic.CA1416.severity = warning # Validate platform compatibility
dotnet_diagnostic.CA1417.severity = warning # Do not use OutAttribute on string parameters for P/Invokes
dotnet_diagnostic.CA1418.severity = warning # Use valid platform string
dotnet_diagnostic.CA1419.severity = warning # Provide a parameterless constructor that is as visible as the containing type for concrete types derived from 'System.Runtime.InteropServices.SafeHandle'
dotnet_diagnostic.CA1420.severity = warning # Property, type, or attribute requires runtime marshalling
dotnet_diagnostic.CA1421.severity = warning # Method uses runtime marshalling when DisableRuntimeMarshallingAttribute is applied
dotnet_diagnostic.CA1422.severity = warning # Validate platform compatibility
dotnet_diagnostic.CA1501.severity = warning # Avoid excessive inheritance
dotnet_diagnostic.CA1502.severity = warning # Avoid excessive complexity
dotnet_diagnostic.CA1505.severity = warning # Avoid unmaintainable code
dotnet_diagnostic.CA1506.severity = warning # Avoid excessive class coupling
dotnet_diagnostic.CA1507.severity = warning # Use nameof in place of string
dotnet_diagnostic.CA1508.severity = warning # Avoid dead conditional code
dotnet_diagnostic.CA1509.severity = warning # Invalid entry in code metrics configuration file
dotnet_diagnostic.CA1514.severity = warning # Avoid redundant length argument
dotnet_diagnostic.CA1700.severity = warning # Do not name enum values 'Reserved'
dotnet_diagnostic.CA1707.severity = warning # Identifiers should not contain underscores
dotnet_diagnostic.CA1708.severity = warning # Identifiers should differ by more than case
dotnet_diagnostic.CA1710.severity = warning # Identifiers should have correct suffix
dotnet_diagnostic.CA1711.severity = silent # Identifiers should not have incorrect suffix
dotnet_diagnostic.CA1712.severity = warning # Do not prefix enum values with type name
dotnet_diagnostic.CA1713.severity = warning # Events should not have before or after prefix
dotnet_diagnostic.CA1714.severity = warning # Flags enums should have plural names
dotnet_diagnostic.CA1715.severity = warning # Identifiers should have correct prefix
dotnet_diagnostic.CA1716.severity = warning # Identifiers should not match keywords
dotnet_diagnostic.CA1717.severity = warning # Only FlagsAttribute enums should have plural names
dotnet_diagnostic.CA1720.severity = warning # Identifiers should not contain type names
dotnet_diagnostic.CA1721.severity = warning # Property names should not match get methods
dotnet_diagnostic.CA1724.severity = warning # Type Names Should Not Match Namespaces
dotnet_diagnostic.CA1725.severity = warning # Parameter names should match base declaration
dotnet_diagnostic.CA1727.severity = warning # Use PascalCase for named placeholders
dotnet_diagnostic.CA1801.severity = warning # Review unused parameters
dotnet_diagnostic.CA1802.severity = warning # Use Literals Where Appropriate
dotnet_diagnostic.CA1805.severity = warning # Do not initialize unnecessarily
dotnet_diagnostic.CA1806.severity = warning # Do not ignore method results
dotnet_diagnostic.CA1810.severity = warning # Initialize reference type static fields inline
dotnet_diagnostic.CA1812.severity = silent # Avoid uninstantiated internal classes
dotnet_diagnostic.CA1813.severity = warning # Avoid unsealed attributes
dotnet_diagnostic.CA1814.severity = warning # Prefer jagged arrays over multidimensional
dotnet_diagnostic.CA1815.severity = warning # Override equals and operator equals on value types
dotnet_diagnostic.CA1816.severity = warning # Call GC.SuppressFinalize correctly
dotnet_diagnostic.CA1819.severity = warning # Properties should not return arrays
dotnet_diagnostic.CA1820.severity = warning # Test for empty strings using string length
dotnet_diagnostic.CA1821.severity = warning # Remove empty finalizers
dotnet_diagnostic.CA1822.severity = warning # Mark members as static
dotnet_diagnostic.CA1823.severity = warning # Avoid unused private fields
dotnet_diagnostic.CA1824.severity = warning # Mark assemblies with NeutralResourcesLanguageAttribute
dotnet_diagnostic.CA1825.severity = warning # Avoid zero-length array allocations
dotnet_diagnostic.CA1826.severity = warning # Use property instead of Linq Enumerable method
dotnet_diagnostic.CA1827.severity = warning # Do not use Count/LongCount when Any can be used
dotnet_diagnostic.CA1828.severity = warning # Do not use CountAsync/LongCountAsync when AnyAsync can be used
dotnet_diagnostic.CA1829.severity = warning # Use Length/Count property instead of Enumerable.Count method
dotnet_diagnostic.CA1830.severity = warning # Prefer strongly-typed Append and Insert method overloads on StringBuilder
dotnet_diagnostic.CA1831.severity = warning # Use AsSpan instead of Range-based indexers for string when appropriate
dotnet_diagnostic.CA1832.severity = warning # Use AsSpan or AsMemory instead of Range-based indexers for getting ReadOnlySpan or ReadOnlyMemory portion of an array
dotnet_diagnostic.CA1833.severity = warning # Use AsSpan or AsMemory instead of Range-based indexers for getting Span or Memory portion of an array
dotnet_diagnostic.CA1834.severity = warning # Use StringBuilder.Append(char) for single character strings
dotnet_diagnostic.CA1835.severity = warning # Prefer the 'Memory'-based overloads for 'ReadAsync' and 'WriteAsync'
dotnet_diagnostic.CA1836.severity = warning # Prefer IsEmpty over Count when available
dotnet_diagnostic.CA1837.severity = warning # Use Environment.ProcessId instead of Process.GetCurrentProcess().Id
dotnet_diagnostic.CA1838.severity = warning # Avoid StringBuilder parameters for P/Invokes
dotnet_diagnostic.CA1839.severity = warning # Use Environment.ProcessPath instead of Process.GetCurrentProcess().MainModule.FileName
dotnet_diagnostic.CA1840.severity = warning # Use Environment.CurrentManagedThreadId instead of Thread.CurrentThread.ManagedThreadId
dotnet_diagnostic.CA1841.severity = warning # Prefer Dictionary Contains methods
dotnet_diagnostic.CA1842.severity = warning # Do not use 'WhenAll' with a single task
dotnet_diagnostic.CA1843.severity = warning # Do not use 'WaitAll' with a single task
dotnet_diagnostic.CA1844.severity = warning # Provide memory-based overrides of async methods when subclassing 'Stream'
dotnet_diagnostic.CA1845.severity = warning # Use span-based 'string.Concat'
dotnet_diagnostic.CA1846.severity = warning # Prefer AsSpan over Substring
dotnet_diagnostic.CA1847.severity = warning # Use char literal for a single character lookup
dotnet_diagnostic.CA1848.severity = warning # Use the LoggerMessage delegates
dotnet_diagnostic.CA1849.severity = warning # Call async methods when in an async method
dotnet_diagnostic.CA1850.severity = warning # Prefer static HashData method over ComputeHash
dotnet_diagnostic.CA1851.severity = warning # Possible multiple enumerations of IEnumerable collection
dotnet_diagnostic.CA1852.severity = warning # Seal internal types
dotnet_diagnostic.CA1853.severity = warning # Unnecessary call to 'Dictionary.ContainsKey(key)'
dotnet_diagnostic.CA1854.severity = warning # Prefer the 'IDictionary.TryGetValue(TKey, out TValue)' method
dotnet_diagnostic.CA1855.severity = warning # Use Span<T>.Clear() instead of Span<T>.Fill()
dotnet_diagnostic.CA1858.severity = warning # Use StartsWith instead of IndexOf
dotnet_diagnostic.CA1859.severity = warning # Use concrete types when possible for improved performance
dotnet_diagnostic.CA1860.severity = warning # Avoid using 'Enumerable.Any()' extension method
dotnet_diagnostic.CA1861.severity = warning # Avoid constant arrays as arguments
dotnet_diagnostic.CA1864.severity = warning # Prefer the 'IDictionary.TryAdd(TKey, TValue)' method
dotnet_diagnostic.CA1865.severity = warning #CA1867: Use char overload
dotnet_diagnostic.CA1868.severity = warning # Unnecessary call to 'Contains' for sets
dotnet_diagnostic.CA1869.severity = warning # Cache and reuse 'JsonSerializerOptions' instances
dotnet_diagnostic.CA1870.severity = warning # Use a cached 'SearchValues' instance
dotnet_diagnostic.CA2000.severity = warning # Dispose objects before losing scope
dotnet_diagnostic.CA2002.severity = warning # Do not lock on objects with weak identity
dotnet_diagnostic.CA2007.severity = warning # Do not directly await a Task
dotnet_diagnostic.CA2008.severity = warning # Do not create tasks without passing a TaskScheduler
dotnet_diagnostic.CA2009.severity = warning # Do not call ToImmutableCollection on an ImmutableCollection value
dotnet_diagnostic.CA2011.severity = warning # Do not assign property within its setter
dotnet_diagnostic.CA2012.severity = warning # Use ValueTasks correctly
dotnet_diagnostic.CA2013.severity = warning # Do not use ReferenceEquals with value types
dotnet_diagnostic.CA2014.severity = warning # Do not use stackalloc in loops.
dotnet_diagnostic.CA2015.severity = warning # Do not define finalizers for types derived from MemoryManager<T>
dotnet_diagnostic.CA2016.severity = warning # Forward the CancellationToken parameter to methods that take one
dotnet_diagnostic.CA2017.severity = warning # Parameter count mismatch
dotnet_diagnostic.CA2018.severity = warning # The count argument to Buffer.BlockCopy should specify the number of bytes to copy
dotnet_diagnostic.CA2019.severity = warning # ThreadStatic fields should not use inline initialization
dotnet_diagnostic.CA2020.severity = warning # Prevent behavioral change caused by built-in operators of IntPtr/UIntPtr
dotnet_diagnostic.CA2100.severity = warning # Review SQL queries for security vulnerabilities
dotnet_diagnostic.CA2101.severity = warning # Specify marshalling for P/Invoke string arguments
dotnet_diagnostic.CA2109.severity = warning # Review visible event handlers
dotnet_diagnostic.CA2119.severity = warning # Seal methods that satisfy private interfaces
dotnet_diagnostic.CA2153.severity = warning # Avoid handling Corrupted State Exceptions
dotnet_diagnostic.CA2200.severity = warning # Rethrow to preserve stack details
dotnet_diagnostic.CA2201.severity = warning # Do not raise reserved exception types
dotnet_diagnostic.CA2207.severity = warning # Initialize value type static fields inline
dotnet_diagnostic.CA2208.severity = warning # Instantiate argument exceptions correctly
dotnet_diagnostic.CA2211.severity = warning # Non-constant fields should not be visible
dotnet_diagnostic.CA2213.severity = warning # Disposable fields should be disposed
dotnet_diagnostic.CA2214.severity = warning # Do not call overridable methods in constructors
dotnet_diagnostic.CA2215.severity = warning # Dispose methods should call base class dispose
dotnet_diagnostic.CA2216.severity = warning # Disposable types should declare finalizer
dotnet_diagnostic.CA2217.severity = warning # Do not mark enums with FlagsAttribute
dotnet_diagnostic.CA2218.severity = warning # Override GetHashCode on overriding Equals
dotnet_diagnostic.CA2219.severity = warning # Do not raise exceptions in exception clauses
dotnet_diagnostic.CA2224.severity = warning # Override equals on overloading operator equals
dotnet_diagnostic.CA2225.severity = warning # Operator overloads have named alternates
dotnet_diagnostic.CA2226.severity = warning # Operators should have symmetrical overloads
dotnet_diagnostic.CA2227.severity = warning # Collection properties should be read only
dotnet_diagnostic.CA2229.severity = warning # Implement serialization constructors
dotnet_diagnostic.CA2231.severity = warning # Overload operator equals on overriding ValueType.Equals
dotnet_diagnostic.CA2234.severity = warning # Pass System.Uri objects instead of strings
dotnet_diagnostic.CA2235.severity = warning # Mark all non-serializable fields
dotnet_diagnostic.CA2237.severity = warning # Mark ISerializable types with SerializableAttribute
dotnet_diagnostic.CA2241.severity = warning # Provide correct arguments to formatting methods
dotnet_diagnostic.CA2242.severity = warning # Test for NaN correctly
dotnet_diagnostic.CA2243.severity = warning # Attribute string literals should parse correctly
dotnet_diagnostic.CA2244.severity = warning # Do not duplicate indexed element initializations
dotnet_diagnostic.CA2245.severity = warning # Do not assign a property to itself
dotnet_diagnostic.CA2246.severity = warning # Do not assign a symbol and its member in the same statement
dotnet_diagnostic.CA2247.severity = warning # Argument passed to TaskCompletionSource constructor should be TaskCreationOptions enum instead of TaskContinuationOptions enum.
dotnet_diagnostic.CA2248.severity = warning # Provide correct enum argument to Enum.HasFlag
dotnet_diagnostic.CA2249.severity = warning # Consider using String.Contains instead of String.IndexOf
dotnet_diagnostic.CA2250.severity = warning # Use ThrowIfCancellationRequested
dotnet_diagnostic.CA2251.severity = warning # Use String.Equals over String.Compare
dotnet_diagnostic.CA2252.severity = warning # Opt in to preview features
dotnet_diagnostic.CA2253.severity = warning # Named placeholders should not be numeric values
dotnet_diagnostic.CA2254.severity = warning # Template should be a static expression
dotnet_diagnostic.CA2255.severity = warning # The ModuleInitializer attribute should not be used in libraries
dotnet_diagnostic.CA2256.severity = warning # All members declared in parent interfaces must have an implementation in a DynamicInterfaceCastableImplementation-attributed interface
dotnet_diagnostic.CA2257.severity = warning # Members defined on an interface with 'DynamicInterfaceCastableImplementationAttribute' should be 'static'
dotnet_diagnostic.CA2258.severity = warning # Providing a 'DynamicInterfaceCastableImplementation' interface in Visual Basic is unsupported
dotnet_diagnostic.CA2259.severity = warning # Ensure ThreadStatic is only used with static fields
dotnet_diagnostic.CA2260.severity = warning # Implement generic math interfaces correctly
dotnet_diagnostic.CA2300.severity = warning # Do not use insecure deserializer BinaryFormatter
dotnet_diagnostic.CA2301.severity = warning # Do not call BinaryFormatter.Deserialize without first setting BinaryFormatter.Binder
dotnet_diagnostic.CA2302.severity = warning # Ensure BinaryFormatter.Binder is set before calling BinaryFormatter.Deserialize
dotnet_diagnostic.CA2305.severity = warning # Do not use insecure deserializer LosFormatter
dotnet_diagnostic.CA2310.severity = warning # Do not use insecure deserializer NetDataContractSerializer
dotnet_diagnostic.CA2311.severity = warning # Do not deserialize without first setting NetDataContractSerializer.Binder
dotnet_diagnostic.CA2312.severity = warning # Ensure NetDataContractSerializer.Binder is set before deserializing
dotnet_diagnostic.CA2315.severity = warning # Do not use insecure deserializer ObjectStateFormatter
dotnet_diagnostic.CA2321.severity = warning # Do not deserialize with JavaScriptSerializer using a SimpleTypeResolver
dotnet_diagnostic.CA2322.severity = warning # Ensure JavaScriptSerializer is not initialized with SimpleTypeResolver before deserializing
dotnet_diagnostic.CA2326.severity = warning # Do not use TypeNameHandling values other than None
dotnet_diagnostic.CA2327.severity = warning # Do not use insecure JsonSerializerSettings
dotnet_diagnostic.CA2328.severity = warning # Ensure that JsonSerializerSettings are secure
dotnet_diagnostic.CA2329.severity = warning # Do not deserialize with JsonSerializer using an insecure configuration
dotnet_diagnostic.CA2330.severity = warning # Ensure that JsonSerializer has a secure configuration when deserializing
dotnet_diagnostic.CA2350.severity = warning # Ensure DataTable.ReadXml()'s input is trusted
dotnet_diagnostic.CA2351.severity = warning # Ensure DataSet.ReadXml()'s input is trusted
dotnet_diagnostic.CA2352.severity = warning # Unsafe DataSet or DataTable in serializable type can be vulnerable to remote code execution attacks
dotnet_diagnostic.CA2353.severity = warning # Unsafe DataSet or DataTable in serializable type
dotnet_diagnostic.CA2354.severity = warning # Unsafe DataSet or DataTable in deserialized object graph can be vulnerable to remote code execution attack
dotnet_diagnostic.CA2355.severity = warning # Unsafe DataSet or DataTable in deserialized object graph
dotnet_diagnostic.CA2356.severity = warning # Unsafe DataSet or DataTable in web deserialized object graph
dotnet_diagnostic.CA2361.severity = warning # Ensure autogenerated class containing DataSet.ReadXml() is not used with untrusted data
dotnet_diagnostic.CA2362.severity = warning # Unsafe DataSet or DataTable in autogenerated serializable type can be vulnerable to remote code execution attacks
dotnet_diagnostic.CA3001.severity = warning # Review code for SQL injection vulnerabilities
dotnet_diagnostic.CA3002.severity = warning # Review code for XSS vulnerabilities
dotnet_diagnostic.CA3003.severity = warning # Review code for file path injection vulnerabilities
dotnet_diagnostic.CA3004.severity = warning # Review code for information disclosure vulnerabilities
dotnet_diagnostic.CA3005.severity = warning # Review code for LDAP injection vulnerabilities
dotnet_diagnostic.CA3006.severity = warning # Review code for process command injection vulnerabilities
dotnet_diagnostic.CA3007.severity = warning # Review code for open redirect vulnerabilities
dotnet_diagnostic.CA3008.severity = warning # Review code for XPath injection vulnerabilities
dotnet_diagnostic.CA3009.severity = warning # Review code for XML injection vulnerabilities
dotnet_diagnostic.CA3010.severity = warning # Review code for XAML injection vulnerabilities
dotnet_diagnostic.CA3011.severity = warning # Review code for DLL injection vulnerabilities
dotnet_diagnostic.CA3012.severity = warning # Review code for regex injection vulnerabilities
dotnet_diagnostic.CA3061.severity = warning # Do not add schema by URL
dotnet_diagnostic.CA3075.severity = warning # Insecure DTD Processing
dotnet_diagnostic.CA3076.severity = warning # Insecure XSLT Script Execution
dotnet_diagnostic.CA3077.severity = warning # Insecure Processing in API Design, XML Document and XML Text Reader
dotnet_diagnostic.CA3147.severity = warning # Mark verb handlers with ValidateAntiForgeryToken
dotnet_diagnostic.CA5350.severity = warning # Do Not Use Weak Cryptographic Algorithms
dotnet_diagnostic.CA5351.severity = warning # Do Not Use Broken Cryptographic Algorithms
dotnet_diagnostic.CA5358.severity = warning # Do Not Use Unsafe Cipher Modes
dotnet_diagnostic.CA5359.severity = warning # Do not disable certificate validation
dotnet_diagnostic.CA5360.severity = warning # Do not call dangerous methods in deserialization
dotnet_diagnostic.CA5361.severity = warning # Do not disable Schannel use of strong crypto
dotnet_diagnostic.CA5362.severity = warning # Potential reference cycle in deserialized object graph
dotnet_diagnostic.CA5363.severity = warning # Do not disable request validation
dotnet_diagnostic.CA5364.severity = warning # Do not use deprecated security protocols
dotnet_diagnostic.CA5365.severity = warning # Do Not Disable HTTP Header Checking
dotnet_diagnostic.CA5366.severity = warning # Use XmlReader For DataSet Read XML
dotnet_diagnostic.CA5367.severity = warning # Do Not Serialize Types With Pointer Fields
dotnet_diagnostic.CA5368.severity = warning # Set ViewStateUserKey For Classes Derived From Page
dotnet_diagnostic.CA5369.severity = warning # Use XmlReader for Deserialize
dotnet_diagnostic.CA5370.severity = warning # Use XmlReader for validating reader
dotnet_diagnostic.CA5371.severity = warning # Use XmlReader for schema read
dotnet_diagnostic.CA5372.severity = warning # Use XmlReader for XPathDocument
dotnet_diagnostic.CA5373.severity = warning # Do not use obsolete key derivation function
dotnet_diagnostic.CA5374.severity = warning # Do Not Use XslTransform
dotnet_diagnostic.CA5375.severity = warning # Do not use account shared access signature
dotnet_diagnostic.CA5376.severity = warning # Use SharedAccessProtocol HttpsOnly
dotnet_diagnostic.CA5377.severity = warning # Use container level access policy
dotnet_diagnostic.CA5378.severity = warning # Do not disable ServicePointManagerSecurityProtocols
dotnet_diagnostic.CA5379.severity = warning # Do not use weak key derivation function algorithm
dotnet_diagnostic.CA5380.severity = warning # Do not add certificates to root store
dotnet_diagnostic.CA5381.severity = warning # Ensure certificates are not added to root store
dotnet_diagnostic.CA5382.severity = warning # Use secure cookies in ASP.NET Core
dotnet_diagnostic.CA5383.severity = warning # Ensure use secure cookies in ASP.NET Core
dotnet_diagnostic.CA5384.severity = warning # Do not use digital signature algorithm (DSA)
dotnet_diagnostic.CA5385.severity = warning # Use Rivest–Shamir–Adleman (RSA) algorithm with sufficient key size
dotnet_diagnostic.CA5386.severity = warning # Avoid hardcoding SecurityProtocolType value
dotnet_diagnostic.CA5387.severity = warning # Do not use weak key derivation function with insufficient iteration count
dotnet_diagnostic.CA5388.severity = warning # Ensure sufficient iteration count when using weak key derivation function
dotnet_diagnostic.CA5389.severity = warning # Do not add archive item's path to the target file system path
dotnet_diagnostic.CA5390.severity = warning # Do not hard-code encryption key
dotnet_diagnostic.CA5391.severity = warning # Use antiforgery tokens in ASP.NET Core MVC controllers
dotnet_diagnostic.CA5392.severity = warning # Use DefaultDllImportSearchPaths attribute for P/Invokes
dotnet_diagnostic.CA5393.severity = warning # Do not use unsafe DllImportSearchPath value
dotnet_diagnostic.CA5394.severity = warning # Do not use insecure randomness
dotnet_diagnostic.CA5395.severity = warning # Miss HttpVerb attribute for action methods
dotnet_diagnostic.CA5396.severity = warning # Set HttpOnly to true for HttpCookie
dotnet_diagnostic.CA5397.severity = warning # Do not use deprecated SslProtocols values
dotnet_diagnostic.CA5398.severity = warning # Avoid hardcoded SslProtocols values
dotnet_diagnostic.CA5399.severity = warning # Definitely disable HttpClient certificate revocation list check
dotnet_diagnostic.CA5400.severity = warning # Ensure HttpClient certificate revocation list check is not disabled
dotnet_diagnostic.CA5401.severity = warning # Do not use CreateEncryptor with non-default IV
dotnet_diagnostic.CA5402.severity = warning # Use CreateEncryptor with the default IV
dotnet_diagnostic.CA5403.severity = warning # Do not hard-code certificate
dotnet_diagnostic.CA5404.severity = warning # Do not disable token validation checks
dotnet_diagnostic.CA5405.severity = warning # Do not always skip token validation in delegates
dotnet_diagnostic.IDE0001.severity = warning # Simplify name
dotnet_diagnostic.IDE0002.severity = warning # Simplify member access
dotnet_diagnostic.IDE0003.severity = warning # Remove this or Me qualification
dotnet_style_qualification_for_field = false
dotnet_style_qualification_for_property = false
dotnet_style_qualification_for_method = false
dotnet_style_qualification_for_event = false
dotnet_diagnostic.IDE0004.severity = warning # Remove unnecessary cast
dotnet_diagnostic.IDE0005.severity = warning # Remove unnecessary import
dotnet_diagnostic.IDE0007.severity = warning # Use var instead of explicit type
csharp_style_var_for_built_in_types = true
csharp_style_var_when_type_is_apparent = true
csharp_style_var_elsewhere = true
dotnet_diagnostic.IDE0010.severity = warning # Add missing cases to switch statement
dotnet_diagnostic.IDE0011.severity = warning # Add braces
csharp_prefer_braces = true
dotnet_diagnostic.IDE0016.severity = warning # Use throw expression
csharp_style_throw_expression = true
dotnet_diagnostic.IDE0017.severity = warning # Use object initializers
dotnet_style_object_initializer = true
dotnet_diagnostic.IDE0018.severity = warning # Inline variable declaration
csharp_style_inlined_variable_declaration = true
dotnet_diagnostic.IDE0019.severity = warning # Use pattern matching to avoid as followed by a null check
csharp_style_pattern_matching_over_as_with_null_check = true
dotnet_diagnostic.IDE0020.severity = warning # Use pattern matching to avoid is check followed by a cast (with variable)
csharp_style_pattern_matching_over_is_with_cast_check = true
dotnet_diagnostic.IDE0021.severity = warning # Use expression body for constructors
csharp_style_expression_bodied_constructors = true
dotnet_diagnostic.IDE0022.severity = warning # Use expression body for methods
csharp_style_expression_bodied_methods = true
dotnet_diagnostic.IDE0023.severity = warning # Use expression body for conversion operators
csharp_style_expression_bodied_operators = true
dotnet_diagnostic.IDE0024.severity = warning # Use expression body for operators
csharp_style_expression_bodied_operators = true
dotnet_diagnostic.IDE0025.severity = warning # Use expression body for properties
csharp_style_expression_bodied_properties = true
dotnet_diagnostic.IDE0026.severity = warning # Use expression body for indexers
csharp_style_expression_bodied_indexers = true
dotnet_diagnostic.IDE0027.severity = warning # Use expression body for accessors
csharp_style_expression_bodied_accessors = true
dotnet_diagnostic.IDE0028.severity = warning # Use collection initializers
dotnet_style_collection_initializer = true
dotnet_diagnostic.IDE0029.severity = warning # Null check can be simplified
dotnet_style_coalesce_expression = true
dotnet_diagnostic.IDE0030.severity = warning # Null check can be simplified
dotnet_style_coalesce_expression = true
dotnet_diagnostic.IDE0031.severity = warning # Use null propagation
dotnet_style_null_propagation = true
dotnet_diagnostic.IDE0032.severity = warning # Use auto property
dotnet_style_prefer_auto_properties = true
dotnet_diagnostic.IDE0033.severity = warning # Use explicitly provided tuple name
dotnet_style_explicit_tuple_names = true
dotnet_diagnostic.IDE0034.severity = warning # Simplify default expression
csharp_prefer_simple_default_expression = true
dotnet_diagnostic.IDE0035.severity = warning # Remove unreachable code
dotnet_diagnostic.IDE0036.severity = warning # Order modifiers
csharp_preferred_modifier_order = public, private, protected, internal, file, static, extern, new, virtual, abstract, sealed, override, readonly, unsafe, required, volatile, async
dotnet_diagnostic.IDE0037.severity = warning # Use inferred member name
dotnet_style_prefer_inferred_tuple_names = true
dotnet_style_prefer_inferred_anonymous_type_member_names = true
dotnet_diagnostic.IDE0038.severity = warning # Use pattern matching to avoid is check followed by a cast (without variable)
csharp_style_pattern_matching_over_is_with_cast_check = true
dotnet_diagnostic.IDE0039.severity = warning # Use local function instead of lambda
csharp_style_prefer_local_over_anonymous_function = true
dotnet_diagnostic.IDE0040.severity = warning # Add accessibility modifiers
dotnet_style_require_accessibility_modifiers = always
dotnet_diagnostic.IDE0041.severity = warning # Use is null check
dotnet_style_prefer_is_null_check_over_reference_equality_method = true
dotnet_diagnostic.IDE0042.severity = warning # Deconstruct variable declaration
csharp_style_deconstructed_variable_declaration = true
dotnet_diagnostic.IDE0044.severity = warning # Add readonly modifier
dotnet_style_readonly_field = true
dotnet_diagnostic.IDE0045.severity = warning # Use conditional expression for assignment
dotnet_style_prefer_conditional_expression_over_assignment = true
dotnet_diagnostic.IDE0046.severity = warning # Use conditional expression for return
dotnet_style_prefer_conditional_expression_over_return = true
dotnet_diagnostic.IDE0047.severity = warning # Remove unnecessary parentheses
dotnet_style_parentheses_in_arithmetic_binary_operators = always_for_clarity
dotnet_style_parentheses_in_relational_binary_operators = always_for_clarity
dotnet_style_parentheses_in_other_binary_operators = always_for_clarity
dotnet_style_parentheses_in_other_operators = always_for_clarity
dotnet_diagnostic.IDE0049.severity = warning # Use language keywords instead of framework type names for type references
dotnet_style_predefined_type_for_locals_parameters_members = true
dotnet_style_predefined_type_for_member_access = true
dotnet_diagnostic.IDE0050.severity = warning # Convert anonymous type to tuple
dotnet_diagnostic.IDE0051.severity = warning # Remove unused private member
dotnet_diagnostic.IDE0052.severity = warning # Remove unread private member
dotnet_diagnostic.IDE0053.severity = warning # Use expression body for lambdas
csharp_style_expression_bodied_lambdas = true
dotnet_diagnostic.IDE0054.severity = warning # Use compound assignment
dotnet_style_prefer_compound_assignment = true
dotnet_diagnostic.IDE0055.severity = warning # Fix formatting

dotnet_diagnostic.IDE0055.severity = warning
dotnet_sort_system_directives_first = true
dotnet_separate_import_directive_groups = false
csharp_new_line_before_open_brace = all
csharp_new_line_before_else = true
csharp_new_line_before_catch = true
csharp_new_line_before_finally = true
csharp_new_line_before_members_in_object_initializers = true
csharp_new_line_before_members_in_anonymous_types = true
csharp_new_line_between_query_expression_clauses = true
csharp_indent_case_contents = true
csharp_indent_switch_labels = true
csharp_indent_labels = flush_left
csharp_indent_block_contents = true
csharp_indent_braces = false
csharp_indent_case_contents_when_block = true
csharp_space_after_cast = false
csharp_space_after_keywords_in_control_flow_statements = true
csharp_space_between_parentheses = none
csharp_space_before_colon_in_inheritance_clause = true
csharp_space_after_colon_in_inheritance_clause = true
csharp_space_around_binary_operators = before_and_after
csharp_space_between_method_declaration_parameter_list_parentheses = false
csharp_space_between_method_declaration_empty_parameter_list_parentheses = false
csharp_space_between_method_declaration_name_and_open_parenthesis = false
csharp_space_between_method_call_parameter_list_parentheses = false
csharp_space_between_method_call_empty_parameter_list_parentheses = false
csharp_space_between_method_call_name_and_opening_parenthesis = false
csharp_space_after_comma = true
csharp_space_before_comma = false
csharp_space_after_dot = false
csharp_space_before_dot = false
csharp_space_after_semicolon_in_for_statement = true
csharp_space_before_semicolon_in_for_statement = false
csharp_space_around_declaration_statements = false
csharp_space_before_open_square_brackets = false
csharp_space_between_empty_square_brackets = false
csharp_space_between_square_brackets = false
csharp_preserve_single_line_statements = false
csharp_preserve_single_line_blocks = true

dotnet_diagnostic.IDE0056.severity = warning # Use index operator
csharp_style_prefer_index_operator = true
dotnet_diagnostic.IDE0057.severity = warning # Use range operator
csharp_style_prefer_range_operator = true
dotnet_diagnostic.IDE0058.severity = warning # Remove unused expression value
csharp_style_unused_value_expression_statement_preference = discard_variable
dotnet_diagnostic.IDE0059.severity = warning # Remove unnecessary value assignment
csharp_style_unused_value_assignment_preference = discard_variable
dotnet_diagnostic.IDE0060.severity = warning # Remove unused parameter
dotnet_code_quality_unused_parameters = all
dotnet_diagnostic.IDE0061.severity = warning # Use expression body for local functions
csharp_style_expression_bodied_local_functions = true
dotnet_diagnostic.IDE0062.severity = warning # Make local function static
csharp_prefer_static_local_function = true
dotnet_diagnostic.IDE0063.severity = warning # Use simple using statement
csharp_prefer_simple_using_statement = true
dotnet_diagnostic.IDE0064.severity = warning # Make struct fields writable
dotnet_diagnostic.IDE0065.severity = warning # using directive placement
csharp_using_directive_placement = outside_namespace
dotnet_diagnostic.IDE0066.severity = warning # Use switch expression
csharp_style_prefer_switch_expression = true
dotnet_diagnostic.IDE0070.severity = warning # Use System.HashCode.Combine
dotnet_diagnostic.IDE0071.severity = warning # Simplify interpolation
dotnet_style_prefer_simplified_interpolation = true
dotnet_diagnostic.IDE0072.severity = silent # Add missing cases to switch expression
dotnet_diagnostic.IDE0073.severity = warning # Use file header
file_header_template = Copyright 2022-2024 Michael P. Duda
dotnet_diagnostic.IDE0074.severity = warning # Use coalesce compound assignment
dotnet_style_prefer_compound_assignment = true
dotnet_diagnostic.IDE0075.severity = warning # Simplify conditional expression
dotnet_style_prefer_simplified_boolean_expressions = true
dotnet_diagnostic.IDE0076.severity = warning # Remove invalid global SuppressMessageAttribute
dotnet_diagnostic.IDE0077.severity = warning # Avoid legacy format target in global SuppressMessageAttribute
dotnet_diagnostic.IDE0078.severity = warning # Use pattern matching
csharp_style_prefer_pattern_matching = true
dotnet_diagnostic.IDE0079.severity = warning # Remove unnecessary suppression
dotnet_remove_unnecessary_suppression_exclusions = all
dotnet_diagnostic.IDE0080.severity = warning # Remove unnecessary suppression operator
dotnet_diagnostic.IDE0081.severity = warning # Remove ByVal
dotnet_diagnostic.IDE0082.severity = warning # Convert typeof to nameof
dotnet_diagnostic.IDE0083.severity = warning # Use pattern matching (not operator)
csharp_style_prefer_not_pattern = true
dotnet_diagnostic.IDE0090.severity = warning # Simplify new expression
csharp_style_implicit_object_creation_when_type_is_apparent = true
dotnet_diagnostic.IDE0100.severity = warning # Remove unnecessary equality operator
dotnet_diagnostic.IDE0110.severity = warning # Remove unnecessary discard
dotnet_diagnostic.IDE0120.severity = warning # Simplify LINQ expression
dotnet_diagnostic.IDE0130.severity = warning # Namespace does not match folder structure
dotnet_style_namespace_match_folder = true
dotnet_diagnostic.IDE0150.severity = warning # Prefer null check over type check
csharp_style_prefer_null_check_over_type_check = true
dotnet_diagnostic.IDE0160.severity = warning # Use block-scoped namespace
dotnet_diagnostic.IDE0161.severity = warning # Use file-scoped namespace
csharp_style_namespace_declarations = file_scoped
dotnet_diagnostic.IDE0170.severity = warning # Simplify property pattern
csharp_style_prefer_extended_property_pattern = true
dotnet_diagnostic.IDE0180.severity = warning # Use tuple to swap values
csharp_style_prefer_tuple_swap = true
dotnet_diagnostic.IDE0200.severity = warning # Remove unnecessary lambda expression
csharp_style_prefer_method_group_conversion = true
dotnet_diagnostic.IDE0210.severity = warning # Convert to top-level statements
dotnet_diagnostic.IDE0211.severity = warning # Convert to 'Program.Main' style program
csharp_style_prefer_top_level_statements = true
dotnet_diagnostic.IDE0220.severity = warning # Add explicit cast in foreach loop
dotnet_style_prefer_foreach_explicit_cast_in_source = true
dotnet_diagnostic.IDE0230.severity = warning # Use UTF-8 string literal
csharp_style_prefer_utf8_string_literals = true
dotnet_diagnostic.IDE0240.severity = warning # Nullable directive is redundant
dotnet_diagnostic.IDE0241.severity = warning # Nullable directive is unnecessary
dotnet_diagnostic.IDE0250.severity = warning # Struct can be made 'readonly'
csharp_style_prefer_readonly_struct = true
dotnet_diagnostic.IDE0251.severity = warning # Member can be made 'readonly'
csharp_style_prefer_readonly_struct_member = true
dotnet_diagnostic.IDE0260.severity = warning # Use pattern matching
csharp_style_pattern_matching_over_as_with_null_check = true
dotnet_diagnostic.IDE0270.severity = warning # Null check can be simplified
dotnet_style_coalesce_expression = true
dotnet_diagnostic.IDE0280.severity = warning # Use nameof
dotnet_diagnostic.IDE1005.severity = warning # Use conditional delegate call
csharp_style_conditional_delegate_call = true

dotnet_diagnostic.IDE1006.severity = warning # Naming rule violation
# Constants are PascalCase
dotnet_naming_rule.constants_should_be_pascal_case.severity = warning
dotnet_naming_rule.constants_should_be_pascal_case.symbols = constants
dotnet_naming_rule.constants_should_be_pascal_case.style = constant_style
dotnet_naming_symbols.constants.applicable_kinds = field, local
dotnet_naming_symbols.constants.required_modifiers = const
dotnet_naming_style.constant_style.capitalization = pascal_case
# Non-private fields are PascalCase
dotnet_naming_rule.non_private_fields_should_be_pascal_case.severity = warning
dotnet_naming_rule.non_private_fields_should_be_pascal_case.symbols = non_private_fields
dotnet_naming_rule.non_private_fields_should_be_pascal_case.style = non_private_field_style
dotnet_naming_symbols.non_private_fields.applicable_kinds = field
dotnet_naming_symbols.non_private_fields.applicable_accessibilities = public, protected, internal, protected_internal, private_protected
dotnet_naming_style.non_private_field_style.capitalization = pascal_case
# Private Instance fields are camelCase and start with _
dotnet_naming_rule.private_instance_fields_should_be_camel_case.severity = warning
dotnet_naming_rule.private_instance_fields_should_be_camel_case.symbols = private_instance_fields
dotnet_naming_rule.private_instance_fields_should_be_camel_case.style = private_instance_field_style
dotnet_naming_symbols.private_instance_fields.applicable_kinds = field
dotnet_naming_symbols.private_instance_fields.applicable_accessibilities = private
dotnet_naming_style.private_instance_field_style.capitalization = camel_case
dotnet_naming_style.private_instance_field_style.required_prefix = _
# Private Static Instance fields are PascalCase
dotnet_naming_rule.private_static_instance_fields_should_be_pascal_case.severity = warning
dotnet_naming_rule.private_static_instance_fields_should_be_pascal_case.symbols = private_static_instance_fields
dotnet_naming_rule.private_static_instance_fields_should_be_pascal_case.style = non_private_field_style
dotnet_naming_symbols.private_static_instance_fields.applicable_kinds = field
dotnet_naming_symbols.private_static_instance_fields.applicable_accessibilities = private
dotnet_naming_symbols.private_static_instance_fields.required_modifiers = static
# Locals and parameters are camelCase
dotnet_naming_rule.locals_should_be_camel_case.severity = warning
dotnet_naming_rule.locals_should_be_camel_case.symbols = locals_and_parameters
dotnet_naming_rule.locals_should_be_camel_case.style = camel_case_style
dotnet_naming_symbols.locals_and_parameters.applicable_kinds = parameter, local
dotnet_naming_style.camel_case_style.capitalization = camel_case
# Local functions are PascalCase
dotnet_naming_rule.local_functions_should_be_pascal_case.severity = warning
dotnet_naming_rule.local_functions_should_be_pascal_case.symbols = local_functions
dotnet_naming_rule.local_functions_should_be_pascal_case.style = local_function_style
dotnet_naming_symbols.local_functions.applicable_kinds = local_function
dotnet_naming_style.local_function_style.capitalization = pascal_case
# By default, name items with PascalCase
dotnet_naming_rule.members_should_be_pascal_case.severity = warning
dotnet_naming_rule.members_should_be_pascal_case.symbols = all_members
dotnet_naming_rule.members_should_be_pascal_case.style = pascal_case_style
dotnet_naming_symbols.all_members.applicable_kinds = *
dotnet_naming_style.pascal_case_style.capitalization = pascal_case

dotnet_diagnostic.IL3000.severity = warning # Avoid accessing Assembly file path when publishing as a single file
dotnet_diagnostic.IL3001.severity = warning # Avoid accessing Assembly file path when publishing as a single-file
dotnet_diagnostic.IL3002.severity = warning # Avoid calling members annotated with 'RequiresAssemblyFilesAttribute' when publishing as a single file
dotnet_diagnostic.IL3003.severity = warning # 'RequiresAssemblyFilesAttribute' annotations must match across all interface implementations or overrides.
